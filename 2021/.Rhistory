numbers[3]
paste("Table",numbers[3],sep = "")
View(paste("test","Numbers",sep = ""))
View(testNumbers)
test2 <- paste("test","Numbers",sep = "")
View(test2)
remove(test2)
View(assign(paste("test","Numbers",sep = "")))
View(paste0("test","Numbers",sep = ""))
testNumbers
paste0("test","Numbers",sep = "")
do.call(paste0("test","Numbers",sep = ""))
as.name(paste0("test","Numbers",sep = ""))
View(as.name(paste0("test","Numbers",sep = "")))
eval(parse(paste("test","Numbers",sep = "")))
eval((paste("test","Numbers",sep = ""))
)
get(paste0("test","Numbers",sep = ""))
length(unique(testNumbers[,1]))
length(unique(testNumbers[1,]))
?stop
?return
bingo <- function(boards,numbers){
i <- 1
j <- 1
numBoards <- nrow(boards) / 5
while(i < nrow(boards)){
name <- paste("Table", j, sep = "")
assign(name, boards[i:(i+4),])
i <- i + 5
j <- j + 1
}
for(k in 1:length(numbers)){
current <- numbers[k]
for(m in 1:numBoards){
for(n in 1:5){
for(o in 1:5){
if(get(paste("Table", m, sep = ""))[n][o] == current){
get(paste("Table", m, sep = ""))[n][o] <- "X"
}
}
}
for(p in 1:5){
if(length(get(paste("Table", m, sep = "")))[p,] == 1 || length(get(paste("Table", m, sep = "")))[,p] == 1){
return(paste("Table", m, sep = ""))
}
}
}
}
}
bingo(testBoards,testNumbers)
bingo <- function(boards,numbers){
i <- 1
j <- 1
numBoards <- nrow(boards) / 5
while(i < nrow(boards)){
name <- paste("Table", j, sep = "")
assign(name, boards[i:(i+4),])
i <- i + 5
j <- j + 1
}
for(k in 1:length(numbers)){
current <- numbers[k]
for(m in 1:numBoards){
for(n in 1:5){
for(o in 1:5){
if(get(paste("Table", m, sep = ""))[n,o] == current){
get(paste("Table", m, sep = ""))[n,o] <- "X"
}
}
}
for(p in 1:5){
if(length(get(paste("Table", m, sep = "")))[p,] == 1 || length(get(paste("Table", m, sep = "")))[,p] == 1){
return(paste("Table", m, sep = ""))
}
}
}
}
}
bingo(testBoards,testNumbers)
paste("test", "Numbers", sep = "")[3]
get(paste("test", "Numbers", sep = ""))[3]
bingo <- function(boards,numbers){
i <- 1
j <- 1
numBoards <- nrow(boards) / 5
while(i < nrow(boards)){
name <- paste("Table", j, sep = "")
assign(name, boards[i:(i+4),])
i <- i + 5
j <- j + 1
}
for(k in 1:length(numbers)){
current <- numbers[k]
for(m in 1:numBoards){
for(n in 1:5){
for(o in 1:5){
if(get(paste("Table", m, sep = ""))[n,o] == current){
assign(paste("Table", m, sep = "")[n,o],"X")
}
}
}
for(p in 1:5){
if(length(get(paste("Table", m, sep = "")))[p,] == 1 || length(get(paste("Table", m, sep = "")))[,p] == 1){
return(paste("Table", m, sep = ""))
}
}
}
}
}
bingo(testBoards,testNumbers)
i <- 1
j <- 1
numBoards <- nrow(boards) / 5
while(i < nrow(testBoards)){
name <- paste("Table", j, sep = "")
assign(name, testBoards[i:(i+4),])
i <- i + 5
j <- j + 1
}
for(k in 1:length(testNumbers)){
current <- numbers[k]
for(m in 1:numBoards){
for(n in 1:5){
for(o in 1:5){
if(get(paste("Table", m, sep = ""))[n,o] == current){
assign(paste("Table", m, sep = "")[n,o],"X")
}
}
}
for(p in 1:5){
if(length(get(paste("Table", m, sep = "")))[p,] == 1 || length(get(paste("Table", m, sep = "")))[,p] == 1){
return(paste("Table", m, sep = ""))
}
}
}
}
View(Table1)
View(Table2)
View(Table3)
View(current)
get(paste("Table", 1, sep = "")))[1,]
get(paste("Table", 1, sep = ""))[1,]
bingo <- function(boards,numbers){
i <- 1
j <- 1
numBoards <- nrow(boards) / 5
while(i < nrow(boards)){
name <- paste("Table", j, sep = "")
assign(name, boards[i:(i+4),])
i <- i + 5
j <- j + 1
}
for(k in 1:length(numbers)){
current <- numbers[k]
for(m in 1:numBoards){
for(n in 1:5){
for(o in 1:5){
if(get(paste("Table", m, sep = ""))[n,o] == current){
assign(paste("Table", m, sep = "")[n,o],"X")
}
}
}
for(p in 1:5){
if(length(get(paste("Table", m, sep = ""))[p,]) == 1 || length(get(paste("Table", m, sep = ""))[,p]) == 1){
return(paste("Table", m, sep = ""))
}
}
}
}
}
bingo(testBoards,testNumbers)
for(k in 1:length(testNumbers)){
current <- numbers[k]
for(m in 1:numBoards){
for(n in 1:5){
for(o in 1:5){
if(get(paste("Table", m, sep = ""))[n,o] == current){
assign(paste("Table", m, sep = "")[n,o],"X")
}
}
}
for(p in 1:5){
if(length(get(paste("Table", m, sep = ""))[p,]) == 1 || length(get(paste("Table", m, sep = ""))[,p]) == 1){
return(paste("Table", m, sep = ""))
}
}
}
}
numBoards <- nrow(testBoards) / 5
for(k in 1:length(testNumbers)){
current <- numbers[k]
for(m in 1:numBoards){
for(n in 1:5){
for(o in 1:5){
if(get(paste("Table", m, sep = ""))[n,o] == current){
assign(paste("Table", m, sep = "")[n,o],"X")
}
}
}
for(p in 1:5){
if(length(get(paste("Table", m, sep = ""))[p,]) == 1 || length(get(paste("Table", m, sep = ""))[,p]) == 1){
return(paste("Table", m, sep = ""))
}
}
}
}
for(k in 1:length(testNumbers)){
current <- numbers[k]
for(m in 1:numBoards){
for(n in 1:5){
for(o in 1:5){
if(get(paste("Table", m, sep = ""))[n,o] == current){
assign(paste("Table", m, sep = "")[n,o],"X")
}
}
}
for(p in 1:5){
if(length(get(paste("Table", m, sep = ""))[p,]) == 1 || length(get(paste("Table", m, sep = ""))[,p]) == 1){
return(paste("Table", m, sep = ""))
}
}
}
}
paste("Table", 1, sep = "")
paste("Table", 1, sep = "")[1,1]
get(paste("Table", 1, sep = ""))
get(paste("Table", 1, sep = ""))[1,1]
get(paste("Table", 1, sep = ""))[1,1] <- "X"
get(paste("Table", 1, sep = ""))[1,1] <- NA
test2 <- get(paste("Table", 1, sep = ""))
test2
get(paste("test", 3, sep = "")) <- test2
get(paste("Table", 1, sep = ""))[1,1]
get(paste("Table", 1, sep = ""))[1,1] <- "X"
get(paste0("Table", 1, sep = ""))[1,1] <- "X"
paste0("Table", 1, sep = "")
get(paste0("Table", 1, sep = ""))
test2 <- get(paste0("Table", 1, sep = ""))
remove(test2)
testNumbers <- read.csv("N:/Advent of Code/2021/Day 4 - Giant Squid/testNumbers.txt", header=FALSE);
testBoards <- read.table("N:/Advent of Code/2021/Day 4 - Giant Squid/testBoards.txt", quote="\"");
numbers <- read.csv("N:/Advent of Code/2021/Day 4 - Giant Squid/numbers.txt", header=FALSE);
boards <- read.table("N:/Advent of Code/2021/Day 4 - Giant Squid/boards.txt", quote="\"");
library(dplyr)
boardMarker <- function(board, number){
marked <- is.na(board)
if(all(c(rowMeans(marked), colMeans(marked)) != 1)){
return(0)
}
sum(board, na.rm = TRUE) * number
}
bingo <- function(boards, numbers){
numBoards <- nrows(boards) / 5
boardID <- rep(1:numBoards, each = 5)
for(i in numbers){
boards[boards == i] <- NA
score <- unname(sapply(split(boards, boardID), boardMarker, i))
if(any(score > 0)){
return(score[score > 0])
}
}
}
bingo(testBoards,testNumbers)
bingo <- function(boards, numbers){
numBoards <- nrow(boards) / 5
boardID <- rep(1:numBoards, each = 5)
for(i in numbers){
boards[boards == i] <- NA
score <- unname(sapply(split(boards, boardID), boardMarker, i))
if(any(score > 0)){
return(score[score > 0])
}
}
}
bingo(testBoards,testNumbers)
bingo(boards, numbers);
bingo2 <- function(boards, numbers){
numBoards <- nrow(boards) / 5
boardID <- rep(1:numBoards, each = 5)
for(i in numbers){
boards[boards == i] <- NA
score <- unname(sapply(split(boards, boardID), boardMarker, i))
if(any(score > 0)){
if(numBoards == 1){
return(score[score > 0])
}
boards <- boards[boardID %in% which(score == 0),]
}
}
}
bingo2(numbers, boards)
bingo2(boards, numbers)
bingo2 <- function(boards, numbers){
for(i in numbers){
numBoards <- nrow(boards) / 5
boardID <- rep(1:numBoards, each = 5)
boards[boards == i] <- NA
score <- unname(sapply(split(boards, boardID), boardMarker, i))
if(any(score > 0)){
if(numBoards == 1){
return(score[score > 0])
}
boards <- boards[boardID %in% which(score == 0),]
}
}
}
bingo2(boards, numbers)
test <- read.table("N:/Advent of Code/2021/Day 5 - Hydrothermal Venture/test.txt", quote="\"", comment.char="")
View(test)
data <- read.table("N:/Advent of Code/2021/Day 5 - Hydrothermal Venture/data.txt", quote="\"", comment.char="")
View(test)
View(data)
test <- test[1]
test
test <- read.table("N:/Advent of Code/2021/Day 5 - Hydrothermal Venture/test.txt", quote="\"", comment.char="")
View(test)
test <- test[c(1,3)]
within(test, test<-data.frame(do.call('rbind', strsplit(as.character(test), ',', fixed=TRUE))))
within(test, V1<-data.frame(do.call('rbind', strsplit(as.character(V1), ',', fixed=TRUE))))
test <- within(test, V1<-data.frame(do.call('rbind', strsplit(as.character(V1), ',', fixed=TRUE))))
test <- within(test, V3<-data.frame(do.call('rbind', strsplit(as.character(V3), ',', fixed=TRUE))))
data <- data[c(1,3)];
data <- within(data, V1<-data.frame(do.call('rbind', strsplit(as.character(V1), ',', fixed=TRUE))));
data <- within(data, V3<-data.frame(do.call('rbind', strsplit(as.character(V3), ',', fixed=TRUE))));
colnames(data) <- c('x1', 'y1', 'x2', 'y2')
colnames(data)
test2 <- as.data.frame(test)
View(test)
colnames(test2)
install.packages("reshape")
library(reshape)
?rename
library(stringr)
?str_split_fixed
test[1]
test[1,1]
test[1,1,1]
test <- read.table("N:/Advent of Code/2021/Day 5 - Hydrothermal Venture/test.txt", quote="\"", comment.char="");
test <- test[c(1,3)];
test <- within(test, V1<-data.frame(do.call('rbind', str_split_fixed(as.character(V1), ',', fixed=TRUE))));
test <- within(test, V3<-data.frame(do.call('rbind', str_split_fixed(as.character(V3), ',', fixed=TRUE))));
test <- read.table("N:/Advent of Code/2021/Day 5 - Hydrothermal Venture/test.txt", quote="\"", comment.char="");
test <- test[c(1,3)];
test <- within(test, V1<-data.frame(do.call('rbind', strsplit(as.character(V1), ',', fixed=TRUE))));
test <- within(test, V3<-data.frame(do.call('rbind', strsplit(as.character(V3), ',', fixed=TRUE))));
test2 <- as.matrix(test)
test2
View(test2)
test2[1]
test2[1,1]
test2[1,2]
colnames(test2)
test <- read.table("N:/Advent of Code/2021/Day 5 - Hydrothermal Venture/test.txt", quote="\"", comment.char="");
test <- test[c(1,3)];
test <- within(test, V1<-data.frame(do.call('rbind', strsplit(as.character(V1), ',', fixed=TRUE))));
test <- as.matrix(within(test, V3<-data.frame(do.call('rbind', strsplit(as.character(V3), ',', fixed=TRUE)))));
remove(test2)
colnames(test)
colnames(test) <- c("x1", "y1", "x2", "y2");
data <- read.table("N:/Advent of Code/2021/Day 5 - Hydrothermal Venture/data.txt", quote="\"", comment.char="");
data <- data[c(1,3)];
data <- within(data, V1<-data.frame(do.call('rbind', strsplit(as.character(V1), ',', fixed=TRUE))));
data <- as.matrix(within(data, V3<-data.frame(do.call('rbind', strsplit(as.character(V3), ',', fixed=TRUE)))));
colnames(data) <- c("x1", "y1", "x2", "y2");
overlapCounter <- function(x){
x <- subset(x, x1 == x2 | y1 == y2)
x <- mapply(seq, x$x1, x$x2)
y <- mapply(seq, x$y1, x$y2)
xy <- do.call(rbind, mapply(cbind, x, y))
sum(table(as.data.frame(xy)) > 1)
}
overlapCounter(test)
test <- as.data.frame(test)
overlapCounter(test)
test <- read.table("N:/Advent of Code/2021/Day 5 - Hydrothermal Venture/test.txt", quote="\"", comment.char="");
test <- test[c(1,3)];
test <- within(test, V1<-data.frame(do.call('rbind', strsplit(as.character(V1), ',', fixed=TRUE))));
test <- as.matrix(within(test, V3<-data.frame(do.call('rbind', strsplit(as.character(V3), ',', fixed=TRUE)))));
colnames(test) <- c("x1", "y1", "x2", "y2");
overlapCounter <- function(lines){
lines <- subset(lines, x1 == x2 | y1 == y2)
x <- mapply(seq, lines$x1, lines$x2)
y <- mapply(seq, lines$y1, lines$y2)
xy <- do.call(rbind, mapply(cbind, x, y))
sum(table(as.data.frame(xy)) > 1)
}
overlapCounter(test)
overlapCounter(as.data.frame(test))
overlapCounter <- function(lines){
lines <- subset(as.data.frame(lines), x1 == x2 | y1 == y2)
x <- mapply(seq, lines$x1, lines$x2)
y <- mapply(seq, lines$y1, lines$y2)
xy <- do.call(rbind, mapply(cbind, x, y))
sum(table(as.data.frame(xy)) > 1)
}
overlapCounter(test)
overlapCounter(data)
overlapCounter <- function(lines){
x <- mapply(seq, lines$x1, lines$x2)
y <- mapply(seq, lines$y1, lines$y2)
xy <- do.call(rbind, mapply(cbind, x, y))
sum(table(as.data.frame(xy)) > 1)
}
overlapCounter(test)
overlapCounter <- function(lines){
lines <- as.data.frame(lines)
x <- mapply(seq, lines$x1, lines$x2)
y <- mapply(seq, lines$y1, lines$y2)
xy <- do.call(rbind, mapply(cbind, x, y))
sum(table(as.data.frame(xy)) > 1)
}
overlapCounter(test)
overlapCounter(data)
?mapply
read.vector(test)
scan(file = "N:/Advent of Code/2021/Day 6 - Lanternfish/test.txt"")
)
)
test <- scan("N:/Advent of Code/2021/Day 6 - Lanternfish/test.txt", what = "", sep = ",")
test <- scan(""~/Documents/GitHub/Advent-of-Code/2021/Day 6 - Lanternfish/test.txt", what = "", sep = ",")
test <- scan("~/Documents/GitHub/Advent-of-Code/2021/Day 6 - Lanternfish/test.txt", what = "", sep = ",")
test
test + 1
test <- as.numeric(test)
test
test + 1
remove(test)
test <- as.numeric(scan("~/Documents/GitHub/Advent-of-Code/2021/Day 6 - Lanternfish/test.txt", what = "", sep = ","));
test
data <- test <- as.numeric(scan("~/Documents/GitHub/Advent-of-Code/2021/Day 6 - Lanternfish/data.txt", what = "", sep = ","));
data <- as.numeric(scan("~/Documents/GitHub/Advent-of-Code/2021/Day 6 - Lanternfish/data.txt", what = "", sep = ","));
test <- as.numeric(scan("~/Documents/GitHub/Advent-of-Code/2021/Day 6 - Lanternfish/test.txt", what = "", sep = ","));
remove(overlapCounter())
remove(overlapCounter
)
type(test)
typeof(test)
is.list(test)
is.array(test)
is.vector(test)
sum(test == 3)
append(test,rep(3,4))
lanternfish <- function(x, days){
fish <- x
for(i in 0:days){
new <- sum(x == 0)
fish <- fish - 1
fish <- append(fish, rep(8, new))
}
print(fish)
}
lanternfish(test)
lanternfish(test,18)
lanternfish <- function(x, days){
fish <- x
for(i in 0:days){
new <- sum(fish == 0)
fish <- fish - 1
fish <- append(fish, rep(8, new))
}
print(fish)
}
lanternfish(test,18)
lanternfish <- function(x, days){
fish <- x
for(i in 0:days){
new <- sum(fish == 0)
fish <- replace(fish, fish == -1, 6)
fish <- fish - 1
fish <- append(fish, rep(8, new))
}
print(fish)
}
lanternfish(test,18)
lanternfish <- function(x, days){
fish <- x
for(i in 0:days){
new <- sum(fish == 0)
fish <- fish - 1
fish <- replace(fish, fish == -1, 6)
fish <- append(fish, rep(8, new))
}
print(fish)
}
lanternfish(test,18)
lanternfish <- function(x, days){
fish <- x
for(i in 1:days){
new <- sum(fish == 0)
fish <- fish - 1
fish <- replace(fish, fish == -1, 6)
fish <- append(fish, rep(8, new))
}
print(fish)
}
lanternfish(test,18)
length(lanternfish(test,18))
length(lanternfish(test,80))
lanternfish <- function(x, days){
fish <- x
for(i in 1:days){
new <- sum(fish == 0)
fish <- fish - 1
fish <- replace(fish, fish == -1, 6)
fish <- append(fish, rep(8, new))
}
print(length(fish))
}
lanternfish(data,80);
lanternfish(data,256);
lanternfish(test,256);
