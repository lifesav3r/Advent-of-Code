setwd("N:/Advent of Code/2021")
test <- read.table("N:/Advent of Code/2021/Day 1 - Sonar Sweep/test.txt", quote="\"", comment.char="")
View(test)
length(x)
length(test)
nrow(test)
sonarSweet <- function(x){
counter = 0
for(i in 2:row(x)){
if(x[i] > x[i-1]){
counter = counter + 1
}
}
print(counter)
}
sonarSweep <- function(x){
counter = 0
for(i in 2:row(x)){
if(x[i] > x[i-1]){
counter = counter + 1
}
}
print(counter)
}
remove(sonarSweet())
remove(sonarSweet
)
sonarSweep(test)
test[1,1]
test[1,2]
test[1,]
test[2,]
sonarSweep <- function(x){
counter = 0
for(i in 2:row(x)){
if(x[i,] > x[i-1,]){
counter = counter + 1
}
}
print(counter)
}
sonarSweep(test)
sonarSweep <- function(x){
counter = 0
for(i in 2:nrow(x)){
if(x[i,] > x[i-1,]){
counter = counter + 1
}
}
print(counter)
}
sonarSweep(test)
data <- read.table("N:/Advent of Code/2021/Day 1 - Sonar Sweep/data.txt", quote="\"", comment.char="")
View(data)
sonarSweep(data);
sonarSweep <- function(x){
counter <- 0
storedWindow <- "NULL"
for(i in 2:(nrow(x)-1)){
currentWindow <- x[i-1,] + x[i,] + x[i,]
if(storedWindow == "NULL"){
storedWindow <- x[i-1,] + x[i,] + x[i,]
}
else if(currentWindow > storedWindow){
counter <- counter + 1
}
}
print(counter)
}
sonarSweep(test)
sonarSweep <- function(x){
counter <- 0
storedWindow <- "NULL"
for(i in 2:(nrow(x)-1)){
currentWindow <- x[i-1,] + x[i,] + x[i,]
if(storedWindow == "NULL"){
storedWindow <- x[i-1,] + x[i,] + x[i,]
}
else if(currentWindow > storedWindow){
print("CurrentWindow " + currentWindow)
counter <- counter + 1
}
}
print(counter)
}
sonarSweep(test)
sonarSweep <- function(x){
counter <- 0
storedWindow <- "NULL"
for(i in 2:(nrow(x)-1)){
currentWindow <- x[i-1,] + x[i,] + x[i,]
if(storedWindow == "NULL"){
storedWindow <- x[i-1,] + x[i,] + x[i,]
}
else if(currentWindow > storedWindow){
print(currentWindow)
counter <- counter + 1
}
}
print(counter)
}
sonarSweep(test)
sonarSweep <- function(x){
counter <- 0
storedWindow <- "NULL"
for(i in 2:(nrow(x)-1)){
currentWindow <- x[i-1,] + x[i,] + x[i+1,]
if(storedWindow == "NULL"){
storedWindow <- x[i-1,] + x[i,] + x[i+1,]
}
else if(currentWindow > storedWindow){
counter <- counter + 1
}
}
print(counter)
}
sonarSweep(test)
sonarSweep <- function(x){
counter <- 0
storedWindow <- "NULL"
for(i in 2:(nrow(x)-1)){
currentWindow <- x[i-1,] + x[i,] + x[i+1,]
if(storedWindow == "NULL"){
storedWindow <- x[i-1,] + x[i,] + x[i+1,]
}
else if(currentWindow > storedWindow){
counter <- counter + 1
print(currentWindow)
}
}
print(counter)
}
sonarSweep(test)
sonarSweep <- function(x){
counter <- 0
storedWindow <- 0
for(i in 2:(nrow(x)-1)){
currentWindow <- x[i-1,] + x[i,] + x[i+1,]
else if(currentWindow > storedWindow){
counter <- counter + 1
print(currentWindow)
}
}
print(counter)
}
sonarSweep <- function(x){
counter <- 0
storedWindow <- 0
for(i in 2:(nrow(x)-1)){
currentWindow <- x[i-1,] + x[i,] + x[i+1,]
else if(currentWindow > storedWindow){
counter <- counter + 1
print(currentWindow)
}
}
print(counter)
}
sonarSweep <- function(x){
counter <- 0
storedWindow <- 0
for(i in 2:(nrow(x)-1)){
currentWindow <- x[i-1,] + x[i,] + x[i+1,]
if(currentWindow > storedWindow){
counter <- counter + 1
print(currentWindow)
}
}
print(counter)
}
sonarSweep(test)
N:\Advent of Code\2021\Day 1 - Sonar Sweep\Day 1 - Sonar Sweep.R
sonarSweep <- function(x){
counter <- 0
storedWindow <- 0
for(i in 2:(nrow(x)-1)){
currentWindow <- x[i-1,] + x[i,] + x[i+1,]
if(currentWindow > storedWindow){
counter <- counter + 1
print(currentWindow)
}
storedWindow <- currentWindow
}
print(counter)
}
sonarSweep(test)
sonarSweep <- function(x){
counter <- -1
storedWindow <- 0
for(i in 2:(nrow(x)-1)){
currentWindow <- x[i-1,] + x[i,] + x[i+1,]
if(currentWindow > storedWindow){
counter <- counter + 1
print(currentWindow)
}
storedWindow <- currentWindow
}
print(counter)
}
sonarSweep(test)
sonarSweep(data);
sonarSweep <- function(x){
counter <- -1
storedWindow <- 0
for(i in 2:(nrow(x)-1)){
currentWindow <- x[i-1,] + x[i,] + x[i+1,]
if(currentWindow > storedWindow){
counter <- counter + 1
print(currentWindow)
}
storedWindow <- currentWindow
}
}
sonarSweep(data);
sonarSweep <- function(x){
counter <- -1
storedWindow <- 0
for(i in 2:(nrow(x)-1)){
currentWindow <- x[i-1,] + x[i,] + x[i+1,]
if(currentWindow > storedWindow){
counter <- counter + 1
}
storedWindow <- currentWindow
}
print(counter)
}
sonarSweep(data);
?read.table
test <- read.table("N:/Advent of Code/2021/Day 3 - Binary Diagnostic/test.txt", quote="\"", comment.char="")
View(test)
test <- read.table("N:/Advent of Code/2021/Day 3 - Binary Diagnostic/test.txt", quote="\"", comment.char="", colClasses = "character")
View(test)
data <- read.table("N:/Advent of Code/2021/Day 3 - Binary Diagnostic/data.txt", quote="\"", comment.char="", colClasses = "character")
View(test)
View(data)
data.frame(do.call("rbind", strsplit(as.character(test$V1), "", fixed = TRUE)))
test <- data.frame(do.call("rbind", strsplit(as.character(test$V1), "", fixed = TRUE)))
data <- data.frame(do.call("rbind", strsplit(as.character(data$V1), "", fixed = TRUE)))
test[1,1]
library(dplyr)
test <- mutate_all(test, function(x) as.numeric(as.character(x)))
test[1,1]
data <- mutate_all(data, function(x) as.numeric(as.character(x)))
nrow(test)
colSums(test$X1)
colSums(test)
colSums(test)[3]
length(colSums(test))
test2 <- "testing"
test2 <- paste(" added string",test2)
test2
remove(test2)
?paste0
test2 <- "testing"
test2 <- paste0(test2, "adding more text")
test2
remove(test2)
install.packages("compositions")
library(compositions)
unbinary(10110)
unbinary("10110")
binDiag <- function(x){
threshold <- nrow(test)
xSums <- colSums(x)
gamma <- ""
epsilon <- ""
for(i in 1:length(xSums)){
if(xSums[i] > threshold){
gamma <- paste0(gamma,"1")
epsilon <- paste0(epsilon,"0")
}
else{
gamma <- paste0(gamma,"0")
epsilon <- paste0(epsilon,"1")
}
}
gamma <- unbinary(gamma)
epsilon <- unbinary(epsilon)
return(gamma * epsilon)
}
binDiag(test)
binDiag <- function(x){
threshold <- nrow(x)
xSums <- colSums(x)
gamma <- ""
epsilon <- ""
for(i in 1:length(xSums)){
if(xSums[i] > threshold){
gamma <- paste0(gamma,"1")
epsilon <- paste0(epsilon,"0")
}
else{
gamma <- paste0(gamma,"0")
epsilon <- paste0(epsilon,"1")
}
}
gamma <- unbinary(gamma)
epsilon <- unbinary(epsilon)
return(gamma * epsilon)
}
binDiag(test)
nrows(test)
nrow(test)
class(nrow(test))
colsums(test)
colSums(test)
colSums(test)[1]
gammabinDiag <- function(x){
threshold <- (nrow(x) / 2)
xSums <- colSums(x)
gamma <- ""
epsilon <- ""
for(i in 1:length(xSums)){
if(xSums[i] > threshold){
gamma <- paste0(gamma,"1")
epsilon <- paste0(epsilon,"0")
}
else{
gamma <- paste0(gamma,"0")
epsilon <- paste0(epsilon,"1")
}
}
gamma <- unbinary(gamma)
epsilon <- unbinary(epsilon)
return(gamma * epsilon)
}
binDiag(test)
1:length(test)
threshold <- (nrow(test) / 2)
xSums <- colSums(test)
gamma <- ""
epsilon <- ""
for(i in 1:length(xSums)){
if(xSums[i] > threshold){
gamma <- paste0(gamma,"1")
epsilon <- paste0(epsilon,"0")
}
else{
gamma <- paste0(gamma,"0")
epsilon <- paste0(epsilon,"1")
}
}
gamma <- unbinary(gamma)
epsilon <- unbinary(epsilon)
return(gamma * epsilon)
print(gamma * epsilon)
binDiag <- function(x){
threshold <- (nrow(x) / 2)
xSums <- colSums(x)
gamma <- ""
epsilon <- ""
for(i in 1:length(xSums)){
if(xSums[i] > threshold){
gamma <- paste0(gamma,"1")
epsilon <- paste0(epsilon,"0")
}
else{
gamma <- paste0(gamma,"0")
epsilon <- paste0(epsilon,"1")
}
}
gamma <- unbinary(gamma)
epsilon <- unbinary(epsilon)
print(gamma * epsilon)
}
remove(epsilon)
remove(gamma)
remove(i)
remove(threshold)
remove(xSums)
binDiag(test)
binDiag(data)
