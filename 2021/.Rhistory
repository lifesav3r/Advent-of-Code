CO2Val <- unbinary(CO2Val)
print(oxyVal * CO2Val)
}
binDiag2(test)
binDiag2(data)
remove(test)
remove(data)
remove(CO2Val)
testNumbers <- read.csv("N:/Advent of Code/2021/Day 4 - Giant Squid/testNumbers.txt", header=FALSE)
View(testNumbers)
testBoards <- read.table("N:/Advent of Code/2021/Day 4 - Giant Squid/testBoards.txt", quote="\"")
View(testBoards)
test <- testBoards
test$group <- 1:2 %% 5
test$group <- 1:5 %% 5
test
test2 <- split(test,test$group)
test2
remove(test2)
test
remove(test)
test <- testBoards
test2 <- test[seq(1, nrow(test), 5),]
test2
View(test2)
test %>%
filter(row_number() %% 5 == 1)
library(dplyr)
test %>%
filter(row_number() %% 5 == 1)
View(test)
test %>%
filter(row_number() %% 10 == 1)
test %>%
filter(row_number() %% 5 == 2)
test %>%
filter(row_number() %% 5 == 5)
test %>%
filter(row_number() %% 5 == 4)
test %>%
filter(row_number() %% 3 == 2)
test %>%
filter(row_number() %% 3 == 1)
nrow(test)
test2 <- test %>%
filter(row_number() %% 3 == 1)
numBoards <- nrow(testBoards) / 5
numBoards <- nrow(testBoards) / 5
for(i in 1:numBoards){
name <- paste("Table", i, sep = "")
assign(name, testBoards %>% filter(row_number() %% numBoards == i))
}
Table3
Table1
Table2
for(i in 1:numBoards){
name <- paste("Table", i, sep = "")
assign(name, testBoards %>% filter(row_number() %% numBoards == i))
}
testBoards %>% filter(row_number() %% numBoards == 3)
testBoards %>% filter(row_number() %% numBoards == 2)
testBoards %>% filter(row_number() %% numBoards == 0)
testBoards %>% filter(row_number() %% numBoards == 1)
testBoards %>% filter(row_number() %% 1 == 1)
testBoards %>% filter(row_number() %% 2 == 1)
testBoards %>% filter(row_number() %% 3 == 1)
testBoards %>% filter(row_number() %% 3 == 2)
test2 <- test[seq(1, nrow(test), 5), ]
test2 <- test[seq(1, nrow(test), 2), ]
test2 <- test[seq(1, nrow(test), 3), ]
test2 <- test[seq(2, nrow(test), 3), ]
test2 <- test[seq(5, nrow(test), 3), ]
test2 <- test[1:5]
test2 <- test[1:5,]
bingo <- function(boards){
for(i in 1:nrows(boards)){
name <- paste("Table", i, sep = "")
assign(name, boards[i:(i+4)]))
i <- i + 5
}
}
for(i in 1:nrows(boards)){
name <- paste("Table", i, sep = "")
assign(name, boards[i:(i+4)]))
i <- i + 5
}
for(i in 1:nrow(boards)){
name <- paste("Table", i, sep = "")
assign(name, boards[i:(i+4)]))
i <- i + 5
}
for(i in 1:nrows(test)){
name <- paste("Table", i, sep = "")
assign(name, test[i:(i+4)]))
i <- i + 5
}
i in 1:nrows(test)
1:nrows(test)
1:nrow(boards)
1:nrow(test)
for(i in 1:nrow(boards)){
name <- paste("Table", i, sep = "")
assign(name, boards[i:(i+4)]))
i <- i + 5
}
for(i in 1:nrow(test)){
name <- paste("Table", i, sep = "")
assign(name, test[i:(i+4)]))
i <- i + 5
}
bingo <- function(boards){
for(i in 1:nrow(boards)){
name <- paste("Table", i, sep = "")
assign(name, boards[i:(i+4),]))
i <- i + 5
}
}
bingo <- function(boards){
for(i in 1:nrow(boards)){
name <- paste("Table", i, sep = "")
assign(name, boards[i:(i+4),])
i <- i + 5
}
}
bingo(test)
for(i in 1:nrow(test)){
name <- paste("Table", i, sep = "")
assign(name, test[i:(i+4),])
i <- i + 5
}
Table1
Table2
Table3
View(Table1)
remove(Table1)
remove(Table2)
remove(Table3)
remove(Table4)
remove(Table5)
remove(Table6)
remove(Table7)
remove(Table8)
remove(Table9)
remove(Table10)
remove(Table11)
remove(Table12)
remove(Table13)
remove(Table14)
remove(Table15)
while(i < nrow(test)){
name <- paste("Table", i, sep = "")
assign(name, test[i:(i+4),])
i <- i + 5
}
Table1
while(i < nrow(test)){
name <- paste("Table", i, sep = "")
assign(name, test[i:(i+4),])
i <- i + 5
}
i <- 1
while(i < nrow(test)){
name <- paste("Table", i, sep = "")
assign(name, test[i:(i+4),])
i <- i + 5
}
i <- 1
j <- 1
while(i < nrow(boards)){
name <- paste("Table", j, sep = "")
assign(name, boards[i:(i+4),])
i <- i + 5
j <- j + 1
}
while(i < nrow(test)){
name <- paste("Table", j, sep = "")
assign(name, test[i:(i+4),])
i <- i + 5
j <- j + 1
}
Test 1
Table1
Table2
Table3
i <- 1
j <- 1
i,j <- 2
i & j <- 2
numbers <- read.csv("N:/Advent of Code/2021/Day 4 - Giant Squid/numbers.txt", header=FALSE);
boards <- read.table("N:/Advent of Code/2021/Day 4 - Giant Squid/boards.txt", quote="\"");
while(i < nrow(boards)){
name <- paste("Table", j, sep = "")
assign(name, boards[i:(i+4),])
i <- i + 5
j <- j + 1
}
nrow(tables)
nrow(table)
nrow(boards)
testNumbers <- read.csv("N:/Advent of Code/2021/Day 4 - Giant Squid/testNumbers.txt", header=FALSE);
testBoards <- read.table("N:/Advent of Code/2021/Day 4 - Giant Squid/testBoards.txt", quote="\"");
numbers <- read.csv("N:/Advent of Code/2021/Day 4 - Giant Squid/numbers.txt", header=FALSE);
boards <- read.table("N:/Advent of Code/2021/Day 4 - Giant Squid/boards.txt", quote="\"");
length(testNumbers)
numbers[3]
paste("Table",numbers[3],sep = "")
View(paste("test","Numbers",sep = ""))
View(testNumbers)
test2 <- paste("test","Numbers",sep = "")
View(test2)
remove(test2)
View(assign(paste("test","Numbers",sep = "")))
View(paste0("test","Numbers",sep = ""))
testNumbers
paste0("test","Numbers",sep = "")
do.call(paste0("test","Numbers",sep = ""))
as.name(paste0("test","Numbers",sep = ""))
View(as.name(paste0("test","Numbers",sep = "")))
eval(parse(paste("test","Numbers",sep = "")))
eval((paste("test","Numbers",sep = ""))
)
get(paste0("test","Numbers",sep = ""))
length(unique(testNumbers[,1]))
length(unique(testNumbers[1,]))
?stop
?return
bingo <- function(boards,numbers){
i <- 1
j <- 1
numBoards <- nrow(boards) / 5
while(i < nrow(boards)){
name <- paste("Table", j, sep = "")
assign(name, boards[i:(i+4),])
i <- i + 5
j <- j + 1
}
for(k in 1:length(numbers)){
current <- numbers[k]
for(m in 1:numBoards){
for(n in 1:5){
for(o in 1:5){
if(get(paste("Table", m, sep = ""))[n][o] == current){
get(paste("Table", m, sep = ""))[n][o] <- "X"
}
}
}
for(p in 1:5){
if(length(get(paste("Table", m, sep = "")))[p,] == 1 || length(get(paste("Table", m, sep = "")))[,p] == 1){
return(paste("Table", m, sep = ""))
}
}
}
}
}
bingo(testBoards,testNumbers)
bingo <- function(boards,numbers){
i <- 1
j <- 1
numBoards <- nrow(boards) / 5
while(i < nrow(boards)){
name <- paste("Table", j, sep = "")
assign(name, boards[i:(i+4),])
i <- i + 5
j <- j + 1
}
for(k in 1:length(numbers)){
current <- numbers[k]
for(m in 1:numBoards){
for(n in 1:5){
for(o in 1:5){
if(get(paste("Table", m, sep = ""))[n,o] == current){
get(paste("Table", m, sep = ""))[n,o] <- "X"
}
}
}
for(p in 1:5){
if(length(get(paste("Table", m, sep = "")))[p,] == 1 || length(get(paste("Table", m, sep = "")))[,p] == 1){
return(paste("Table", m, sep = ""))
}
}
}
}
}
bingo(testBoards,testNumbers)
paste("test", "Numbers", sep = "")[3]
get(paste("test", "Numbers", sep = ""))[3]
bingo <- function(boards,numbers){
i <- 1
j <- 1
numBoards <- nrow(boards) / 5
while(i < nrow(boards)){
name <- paste("Table", j, sep = "")
assign(name, boards[i:(i+4),])
i <- i + 5
j <- j + 1
}
for(k in 1:length(numbers)){
current <- numbers[k]
for(m in 1:numBoards){
for(n in 1:5){
for(o in 1:5){
if(get(paste("Table", m, sep = ""))[n,o] == current){
assign(paste("Table", m, sep = "")[n,o],"X")
}
}
}
for(p in 1:5){
if(length(get(paste("Table", m, sep = "")))[p,] == 1 || length(get(paste("Table", m, sep = "")))[,p] == 1){
return(paste("Table", m, sep = ""))
}
}
}
}
}
bingo(testBoards,testNumbers)
i <- 1
j <- 1
numBoards <- nrow(boards) / 5
while(i < nrow(testBoards)){
name <- paste("Table", j, sep = "")
assign(name, testBoards[i:(i+4),])
i <- i + 5
j <- j + 1
}
for(k in 1:length(testNumbers)){
current <- numbers[k]
for(m in 1:numBoards){
for(n in 1:5){
for(o in 1:5){
if(get(paste("Table", m, sep = ""))[n,o] == current){
assign(paste("Table", m, sep = "")[n,o],"X")
}
}
}
for(p in 1:5){
if(length(get(paste("Table", m, sep = "")))[p,] == 1 || length(get(paste("Table", m, sep = "")))[,p] == 1){
return(paste("Table", m, sep = ""))
}
}
}
}
View(Table1)
View(Table2)
View(Table3)
View(current)
get(paste("Table", 1, sep = "")))[1,]
get(paste("Table", 1, sep = ""))[1,]
bingo <- function(boards,numbers){
i <- 1
j <- 1
numBoards <- nrow(boards) / 5
while(i < nrow(boards)){
name <- paste("Table", j, sep = "")
assign(name, boards[i:(i+4),])
i <- i + 5
j <- j + 1
}
for(k in 1:length(numbers)){
current <- numbers[k]
for(m in 1:numBoards){
for(n in 1:5){
for(o in 1:5){
if(get(paste("Table", m, sep = ""))[n,o] == current){
assign(paste("Table", m, sep = "")[n,o],"X")
}
}
}
for(p in 1:5){
if(length(get(paste("Table", m, sep = ""))[p,]) == 1 || length(get(paste("Table", m, sep = ""))[,p]) == 1){
return(paste("Table", m, sep = ""))
}
}
}
}
}
bingo(testBoards,testNumbers)
for(k in 1:length(testNumbers)){
current <- numbers[k]
for(m in 1:numBoards){
for(n in 1:5){
for(o in 1:5){
if(get(paste("Table", m, sep = ""))[n,o] == current){
assign(paste("Table", m, sep = "")[n,o],"X")
}
}
}
for(p in 1:5){
if(length(get(paste("Table", m, sep = ""))[p,]) == 1 || length(get(paste("Table", m, sep = ""))[,p]) == 1){
return(paste("Table", m, sep = ""))
}
}
}
}
numBoards <- nrow(testBoards) / 5
for(k in 1:length(testNumbers)){
current <- numbers[k]
for(m in 1:numBoards){
for(n in 1:5){
for(o in 1:5){
if(get(paste("Table", m, sep = ""))[n,o] == current){
assign(paste("Table", m, sep = "")[n,o],"X")
}
}
}
for(p in 1:5){
if(length(get(paste("Table", m, sep = ""))[p,]) == 1 || length(get(paste("Table", m, sep = ""))[,p]) == 1){
return(paste("Table", m, sep = ""))
}
}
}
}
for(k in 1:length(testNumbers)){
current <- numbers[k]
for(m in 1:numBoards){
for(n in 1:5){
for(o in 1:5){
if(get(paste("Table", m, sep = ""))[n,o] == current){
assign(paste("Table", m, sep = "")[n,o],"X")
}
}
}
for(p in 1:5){
if(length(get(paste("Table", m, sep = ""))[p,]) == 1 || length(get(paste("Table", m, sep = ""))[,p]) == 1){
return(paste("Table", m, sep = ""))
}
}
}
}
paste("Table", 1, sep = "")
paste("Table", 1, sep = "")[1,1]
get(paste("Table", 1, sep = ""))
get(paste("Table", 1, sep = ""))[1,1]
get(paste("Table", 1, sep = ""))[1,1] <- "X"
get(paste("Table", 1, sep = ""))[1,1] <- NA
test2 <- get(paste("Table", 1, sep = ""))
test2
get(paste("test", 3, sep = "")) <- test2
get(paste("Table", 1, sep = ""))[1,1]
get(paste("Table", 1, sep = ""))[1,1] <- "X"
get(paste0("Table", 1, sep = ""))[1,1] <- "X"
paste0("Table", 1, sep = "")
get(paste0("Table", 1, sep = ""))
test2 <- get(paste0("Table", 1, sep = ""))
remove(test2)
testNumbers <- read.csv("N:/Advent of Code/2021/Day 4 - Giant Squid/testNumbers.txt", header=FALSE);
testBoards <- read.table("N:/Advent of Code/2021/Day 4 - Giant Squid/testBoards.txt", quote="\"");
numbers <- read.csv("N:/Advent of Code/2021/Day 4 - Giant Squid/numbers.txt", header=FALSE);
boards <- read.table("N:/Advent of Code/2021/Day 4 - Giant Squid/boards.txt", quote="\"");
library(dplyr)
boardMarker <- function(board, number){
marked <- is.na(board)
if(all(c(rowMeans(marked), colMeans(marked)) != 1)){
return(0)
}
sum(board, na.rm = TRUE) * number
}
bingo <- function(boards, numbers){
numBoards <- nrows(boards) / 5
boardID <- rep(1:numBoards, each = 5)
for(i in numbers){
boards[boards == i] <- NA
score <- unname(sapply(split(boards, boardID), boardMarker, i))
if(any(score > 0)){
return(score[score > 0])
}
}
}
bingo(testBoards,testNumbers)
bingo <- function(boards, numbers){
numBoards <- nrow(boards) / 5
boardID <- rep(1:numBoards, each = 5)
for(i in numbers){
boards[boards == i] <- NA
score <- unname(sapply(split(boards, boardID), boardMarker, i))
if(any(score > 0)){
return(score[score > 0])
}
}
}
bingo(testBoards,testNumbers)
bingo(boards, numbers);
bingo2 <- function(boards, numbers){
numBoards <- nrow(boards) / 5
boardID <- rep(1:numBoards, each = 5)
for(i in numbers){
boards[boards == i] <- NA
score <- unname(sapply(split(boards, boardID), boardMarker, i))
if(any(score > 0)){
if(numBoards == 1){
return(score[score > 0])
}
boards <- boards[boardID %in% which(score == 0),]
}
}
}
bingo2(numbers, boards)
bingo2(boards, numbers)
bingo2 <- function(boards, numbers){
for(i in numbers){
numBoards <- nrow(boards) / 5
boardID <- rep(1:numBoards, each = 5)
boards[boards == i] <- NA
score <- unname(sapply(split(boards, boardID), boardMarker, i))
if(any(score > 0)){
if(numBoards == 1){
return(score[score > 0])
}
boards <- boards[boardID %in% which(score == 0),]
}
}
}
bingo2(boards, numbers)
